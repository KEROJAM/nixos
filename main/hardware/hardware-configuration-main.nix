# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];
  boot = {
    loader = {
      efi.canTouchEfiVariables = true;
      grub = {
	enable = true;
	devices = [ "nodev" ];
	efiSupport = true;
	useOSProber = true;
      };
      };
    kernelPackages = pkgs.linuxKernel.packages.linux_zen;
    initrd.availableKernelModules = [ "xhci_pci" "ahci" "usb_storage" "sd_mod" "rtsx_pci_sdmmc" ];
    initrd.kernelModules = [ ];
    kernelModules = [ "kvm-amd" ];
    extraModulePackages =  with config.boot.kernelPackages; [ v4l2loopback ];
    extraModprobeConfig = ''
        options v4l2loopback devices=1 video_nr=1 card_label="OBS Cam" exclusive_caps=1
      '';
    tmp.cleanOnBoot = true;
  };
  #powerManagement.enable = true;
  hardware = {
  graphics = {
      enable = true;
      enable32Bit = true;
      extraPackages = with pkgs; [
      ];
      extraPackages32 = with pkgs; [
      ];
  };
  nvidia = {
    modesetting.enable = true;
    open = false;
    powerManagement.enable = true;
    package = config.boot.kernelPackages.nvidiaPackages.beta;
  };
};
services.xserver.videoDrivers = [ "nvidia" ];
# Sound

	security.rtkit.enable = true;
	services.pipewire = {
		enable = true;
		alsa.enable = true;
		alsa.support32Bit = true;
		pulse.enable = true;
		jack.enable = true;
		wireplumber.enable = true;
		extraConfig.pipewire."92-low-latency" = {
  			context.properties = {
    			default.clock.rate = 48000;
    			default.clock.quantum = 32;
    			default.clock.min-quantum = 32;
    			default.clock.max-quantum = 32;
 		 	};
	    };
  };


  fileSystems."/" =
    { device = "/dev/disk/by-uuid/76a5f681-3b64-42b5-843a-cd01121771a9";
      fsType = "ext4";
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/323E-B6F3";
      fsType = "vfat";
      options = [ "fmask=0077" "dmask=0077" ];
    };

  fileSystems."/home" =
    { device = "/dev/disk/by-uuid/f9b0f290-d088-43e8-981b-d82eea2d31f4";
      fsType = "ext4";
    };
  fileSystems."/mnt/Windows"=
    { device = "/dev/disk/by-uuid/C64A1CD24A1CC0DB";
      fsType = "ntfs";
    };

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp0s20f3.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}

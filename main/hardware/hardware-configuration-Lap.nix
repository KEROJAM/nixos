# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  inputs,
  ...
}:

{
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
    ./battery.nix
  ];
  boot = {
    loader = {
      efi.canTouchEfiVariables = true;
      grub = {
        enable = true;
        devices = [ "nodev" ];
        efiSupport = true;
        useOSProber = true;
      };
    };
    kernelParams = [
      #"intel_iommu=on"
      #"i915.enable_guc=3"
      #"i915.max_vfs=7"
      "xe.force_probe=7d55"
      "quiet"
      "loglevel=3"
      "pcie_aspm=off"
      "intel_idle.max_cstate=1"
      "xe.enable_dc=0"
      "ahci.mobile_lpm_policy=1"
    ];
    kernelPackages = pkgs.linuxKernel.packages.linux_6_17;
    #kernelPackages = pkgs.linuxPackages.packages.linux_zen;
    initrd.availableKernelModules = [
      "xhci_pci"
      "ahci"
      "usb_storage"
      "usbhid"
      "sd_mod"
      "rtsx_pci_sdmmc"
      "nvme"
      "vmd"
      "thunderbolt"
      "sdhci_pci"
    ];
    initrd.kernelModules = [ "xe" ];
    kernelModules = [ "kvm-intel" ];
    tmp.cleanOnBoot = true;
  };
  hardware = {
    graphics = {
      enable = true;
      enable32Bit = true;
      extraPackages = with pkgs; [
        vpl-gpu-rt
      ];
      extraPackages32 = with pkgs.pkgsi686Linux; [ intel-vaapi-driver ];
    };
    nvidia = {
      modesetting.enable = true;
      open = true;
      powerManagement = {
        enable = true;
        finegrained = true;
      };
      #dynamicBoost.enable = true;
      prime = {
        offload = {
          enable = true;
          enableOffloadCmd = true;
        };
        intelBusId = "PCI:0:2:0";
        nvidiaBusId = "PCI:1:0:0";
      };
      package = config.boot.kernelPackages.nvidiaPackages.latest;
    };
    i2c.enable = true;
    bluetooth.enable = true;
  };
  services.xserver.videoDrivers = [
    "xe"
    "nvidia"
  ];
  services.thermald.enable = true;
  services.tlp = {
    enable = true;
    settings = {
      CPU_SCALING_GOVERNOR_ON_AC = "performance";
      CPU_SCALING_GOVERNOR_ON_BAT = "powersave";

      CPU_ENERGY_PERF_POLICY_ON_BAT = "power";
      CPU_ENERGY_PERF_POLICY_ON_AC = "performance";

      START_CHARGE_THRESH_BAT0 = 40; # 40 and bellow it starts to charge
      STOP_CHARGE_THRESH_BAT0 = 90; # 80 and above it stops charging
    };
  };
  # Sound

  security.rtkit.enable = true;
  services.pipewire = {
    enable = true;
    alsa.enable = true;
    alsa.support32Bit = true;
    pulse.enable = true;
    jack.enable = true;
    wireplumber.enable = true;
    extraConfig.pipewire."92-low-latency" = {
      context.properties = {
        default.clock.rate = 48000;
        default.clock.quantum = 32;
        default.clock.min-quantum = 32;
        default.clock.max-quantum = 32;
      };
    };
  };

  networking.hostName = "lily"; # Define your hostname.
  fileSystems."/" = {
    device = "/dev/disk/by-uuid/21e8d77e-b7b5-4239-adc3-92c27745a1ad";
    fsType = "ext4";
  };

  fileSystems."/home/kerojam" = {
    device = "/dev/disk/by-uuid/422fe9d3-f2e6-4144-8e10-249967febc93";
    fsType = "ext4";
  };
  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/3BDC-5216";
    fsType = "vfat";
    options = [
      "fmask=0077"
      "dmask=0077"
    ];
  };
  fileSystems."/home/kerojam/Windows" = {
    device = "/dev/disk/by-uuid/B616C4F716C4B99F";
    fsType = "ntfs";
  };

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp0s20f3.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
